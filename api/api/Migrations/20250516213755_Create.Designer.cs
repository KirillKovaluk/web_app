// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.DataContext;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250516213755_Create")]
    partial class Create
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("api.Models.FileImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("LotId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LotId");

                    b.ToTable("FileImages", (string)null);
                });

            modelBuilder.Entity("api.Models.Lot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<int>("LotStatus")
                        .HasColumnType("int");

                    b.Property<int>("LotType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal?>("PriceBet")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PriceResult")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("PriceStart")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("UserBetId")
                        .HasColumnType("int");

                    b.Property<int?>("UserBoughtId")
                        .HasColumnType("int");

                    b.Property<int>("UserCreatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserBetId");

                    b.HasIndex("UserBoughtId");

                    b.HasIndex("UserCreatedId");

                    b.ToTable("Lots", (string)null);
                });

            modelBuilder.Entity("api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("api.Models.FileImage", b =>
                {
                    b.HasOne("api.Models.Lot", "Lot")
                        .WithMany("FileImages")
                        .HasForeignKey("LotId");

                    b.Navigation("Lot");
                });

            modelBuilder.Entity("api.Models.Lot", b =>
                {
                    b.HasOne("api.Models.User", "UserBet")
                        .WithMany("LotsBet")
                        .HasForeignKey("UserBetId");

                    b.HasOne("api.Models.User", "UserBought")
                        .WithMany("LotsBought")
                        .HasForeignKey("UserBoughtId");

                    b.HasOne("api.Models.User", "UserCreated")
                        .WithMany("LotsCreated")
                        .HasForeignKey("UserCreatedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserBet");

                    b.Navigation("UserBought");

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("api.Models.Lot", b =>
                {
                    b.Navigation("FileImages");
                });

            modelBuilder.Entity("api.Models.User", b =>
                {
                    b.Navigation("LotsBet");

                    b.Navigation("LotsBought");

                    b.Navigation("LotsCreated");
                });
#pragma warning restore 612, 618
        }
    }
}
